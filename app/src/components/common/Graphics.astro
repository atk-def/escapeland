---
import { runQuery } from '~/sanity/run-query'
import SanityPicture from './SanityPicture.astro'
import { cn } from '~/utils/style-related'
import { graphicsQuery } from '~/sanity/schemas/graphic'
import Icon from '~/components/common/Icon.astro'
import type { HTMLAttributes } from 'astro/types'
import type { ImgAttributes } from 'astro:assets'
import type { SanityImageSize } from '@sanity/asset-utils'

const graphics = await runQuery(graphicsQuery)

interface Props extends HTMLAttributes<'section'> {
  class?: string
  pictureAttributes?: Partial<ImgAttributes & SanityImageSize>
}

const { class: className, pictureAttributes, ...rest } = Astro.props
---

<section class={cn('flex items-center gap-2', className)} {...rest}>
  {
    graphics.map((graphic) => {
      const { image, credit, link } = graphic
      const pictureEl = (
        <SanityPicture
          asset={image.asset}
          alt={credit && `Graphic by ${credit}`}
          {...pictureAttributes}
        />
      )

      return link ? (
        <a class="relative w-20" href={link} target="_blank">
          {pictureEl}
          <Icon
            class="absolute bg-background text-on-background left-0 bottom-0"
            name="arrow-up-right-box"
            size={12}
          />
        </a>
      ) : (
        <div class="w-20">{pictureEl}</div>
      )
    })
  }
</section>
