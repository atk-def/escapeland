---
import clsx from 'clsx'
import type { HTMLAttributes } from 'astro/types'
import { twMerge } from 'tailwind-merge'
import { Image } from 'astro:assets'
import Logo from '~/../public/favicon.svg'
import { $profile } from '~/store/profile'

const profile = $profile.get()

const { contacts, repository } = profile.data

const navigation = {
  BLOG: '/blog',
  ARTWORKS: '/artworks',
  ENGINEERING: '/engineering',
  ...Object.entries(contacts ?? []).reduce(
    (accumulator: { [key: string]: string }, [key, value]) => {
      if (key === 'email') {
        accumulator['E-MAIL'] = `mailto:${value}`
      } else {
        accumulator[key.toUpperCase()] = value
      }
      return accumulator
    },
    {},
  ),
}

export interface Props extends HTMLAttributes<'div'> {}

const { class: className, ...rest } = Astro.props
---

<div class={clsx('flex flex-col gap-8 fixed left-6', className)} {...rest}>
  <a class="w-12 rounded-lg transition-all" href="/">
    <Image
      class="border-2 border-[#85607a]/30 rounded-lg"
      src={Logo}
      alt="Logo"
      draggable="false"
    />
  </a>
  <aside class="flex flex-col gap-4 text-sm tracking-wider ml-1">
    {
      Object.entries(navigation).map(([title, route]) => {
        const isProd = import.meta.env.PROD
        const isActive = (isProd ? `${route}/` : route) === Astro.url.pathname
        return (
          <a
            class={twMerge(
              'opacity-50',
              isActive && 'font-bold opacity-100',
              !isActive && 'hover:font-bold hover:opacity-100',
            )}
            href={route}
          >
            {title}
            {isActive && <i>*</i>}
          </a>
        )
      })
    }
  </aside>
  {
    repository && (
      <a class="fixed bottom-16 text-xs animate-bounce" href={repository}>
        <i> * かぼちゃの馬車 *</i>
      </a>
    )
  }
</div>
