---
import Navigation from '~/components/common/Navigation.astro'
import '@fontsource/dotgothic16'
import '~/styles/crt-effect.css'
import '~/styles/global.css'
import { ViewTransitions } from 'astro:transitions'
import MobileNavigation from '~/components/mobile/MobileNavigation.astro'
import '~/styles/mouse-follower.css'
import { fetchProfile } from '~/store/profile'
import { SEO } from 'astro-seo'

interface Props {
  title?: string
  seo?: Partial<{
    image: string
    description: string
    article: Partial<{
      publishedTime: string
      tags: string[]
    }>
  }>
}
const { title, seo = {} } = Astro.props

const {
  image = '/favicon.svg',
  description = `Welcome to Escapeland, let's embark on an adventure now!`,
  article,
} = seo

const url = Astro.request.url

const profile = await fetchProfile()
const { name } = profile

const titleSuffix = `${name}'s Escapeland`
const fullTitle = title ? `${title} - ${titleSuffix}` : titleSuffix
---

<html lang="en">
  <head>
    <SEO
      charset="utf-8"
      title={fullTitle}
      description={description}
      twitter={{
        card: 'summary',
        image,
        creator: name,
        title: fullTitle,
        description,
        site: url,
      }}
      openGraph={{
        basic: {
          title: fullTitle,
          type: article ? 'article' : 'website',
          image,
          url,
        },
        optional: {
          siteName: titleSuffix,
          description,
        },
        article: { authors: [name], ...article },
      }}
      extend={{
        link: [{ rel: 'icon', href: '/favicon.svg' }],
        meta: [
          { name: 'viewport', content: 'width=device-width' },
          { name: 'generator', content: Astro.generator },
        ],
      }}
    />
    <ViewTransitions />
  </head>
  <body
    class="flex sm:justify-end p-8 sm:p-16 bg-effect-crt font-dotgothic16 min-h-screen"
  >
    <Navigation class="hidden sm:flex" />
    <MobileNavigation />
    <main class="w-full sm:flex-[0_0_calc(100%_-_8rem)]">
      <slot />
    </main>
    <script>
      if (window.matchMedia('(pointer: fine)').matches) {
        document.addEventListener('astro:page-load', async () => {
          const { default: MouseFollower } = await import('mouse-follower')
          const { default: gsap } = await import('gsap')

          MouseFollower.registerGSAP(gsap)
          new MouseFollower()
        })
      }
    </script>
  </body>
</html>
