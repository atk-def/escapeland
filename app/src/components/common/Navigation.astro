---
import type { HTMLAttributes } from 'astro/types'
import Icon from '~/components/common/Icon.astro'
import { runQuery } from '~/sanity/run-query'
import { profileQuery } from '~/sanity/schemas/profile'
import { cn } from '~/utils/style-related'

const profile = await runQuery(profileQuery)

const { contacts } = profile

const contact: Record<string, string> = Object.fromEntries(
  Object.entries(contacts ?? []).map(([key, value]) => {
    if (key === 'email') {
      return ['E-MAIL', `mailto:${value}`]
    }

    return [[key.toUpperCase()], value]
  }),
)

const navigation: Record<string, { pathname: string; icon?: string }> = {
  HOME: { pathname: '/', icon: 'heart' },
  BLOG: { pathname: '/blog/', icon: 'notebook' },
  // ARTWORKS: { pathname: '/artworks/', icon: 'checkerboard' },
  PROJECTS: { pathname: '/engineering/', icon: 'folder' },
}

export interface Props extends HTMLAttributes<'div'> {}

const { class: className, ...rest } = Astro.props
---

<div
  class={cn(
    `w-full h-navigation flex gap-4 tracking-wider bg-container
    text-sm text-on-container [text-shadow:none] px-2 py-2
    items-center justify-center`,
    className,
  )}
  {...rest}
>
  <section class="flex flex-1 justify-evenly">
    {
      Object.entries(navigation).map(([title, { pathname, icon }]) => {
        const isActive = Astro.url.pathname === pathname

        return (
          <a
            class={cn(
              `flex items-center gap-2
              text-xs sm:text-sm w-full
              glitch group opacity-50 select-none`,
              isActive && 'opacity-100',
            )}
            href={pathname}
          >
            {icon && <Icon name={icon} size={16} />}
            {title}
          </a>
        )
      })
    }
  </section>
</div>

<script>
  import { PowerGlitch } from 'powerglitch'

  document.addEventListener('astro:page-load', async () => {
    PowerGlitch.glitch('.glitch', { playMode: 'hover' })
  })
</script>
