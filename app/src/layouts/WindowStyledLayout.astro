---
import ColorSchemeToggle from '~/components/common/ColorSchemeToggle.astro'
import { Image } from 'astro:assets'
import Logo from '~/../public/favicon.svg'
import clsx from 'clsx'
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'div'> {
  headline: string
  class?: string
}

const { headline, class: className, ...rest } = Astro.props
---

<div class={clsx('app-window-layout', className)} {...rest}>
  <section class="app-window-title-bar">
    <Image
      src={Logo}
      alt="Logo"
      width={20}
      class="mr-2 border border-on-background/10 rounded-md"
    />
    <span class="text-sm w-3/4 truncate">{headline}</span>
    <ColorSchemeToggle class="ml-auto pointer-events-auto" />
  </section>
  <div
    id="scroll-wrapper"
    class="p-8 h-[calc(100dvh_-_10rem)] sm:h-[calc(100vh_-_54px)] overflow-auto"
  >
    <div id="scroll-content">
      <slot />
    </div>
  </div>

  <style>
    .app-window-layout {
      @apply border-[0.375rem] border-t-0 border-container shadow-2xl;
      @apply rounded-xl;

      > .app-window-title-bar {
        @apply flex items-center justify-center;
        @apply w-full h-8 bg-container px-0;
      }
    }

    #scroll-wrapper {
      @media (pointer: fine) {
        &::-webkit-scrollbar {
          @apply w-2 h-2;

          background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
          @apply bg-primary;
        }
      }
    }
  </style>
</div>

<script>
  document.addEventListener('astro:page-load', async () => {
    if (window.matchMedia('(pointer: fine)').matches) {
      const { default: Lenis } = await import('@studio-freight/lenis')

      const lenis = new Lenis({
        wrapper: document.getElementById('scroll-wrapper')!,
        content: document.getElementById('scroll-content')!,
      })

      const raf = (time: DOMHighResTimeStamp) => {
        lenis.raf(time)
        requestAnimationFrame(raf)
      }

      requestAnimationFrame(raf)
    }
  })
</script>
