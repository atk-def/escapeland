---
import PageLayout from '~/layouts/PageLayout.astro'
import { runQuery } from '~/sanity/run-query'
import PortableTextImage from '~/components/common/portable-text/PortableTextImage.astro'
import { atrworksQuery } from '~/sanity/schemas/artwork'
import WithArticle from '~/components/common/WithArticle.astro'
import '~/styles/medium-zoom.css'
import { sortDescendingByDate } from '~/utils/sort'
import ResponsiveListLayout from '~/layouts/ResponsiveListLayout.astro'

const artworks = await runQuery(atrworksQuery)
---

<PageLayout title={'ARTWORKS'}>
  {
    artworks && (
      <ResponsiveListLayout>
        {artworks.sort(sortDescendingByDate('publishedAt')).map((artwork) => {
          const { illustration, ...article } = artwork
          return (
            <astro-zoomable>
              <WithArticle class="cursor-zoom-in" article={article}>
                <PortableTextImage
                  data-zoomable
                  class="mb-2"
                  node={{ asset: illustration.asset }}
                />
              </WithArticle>
            </astro-zoomable>
          )
        })}
      </ResponsiveListLayout>
    )
  }
</PageLayout>

<script>
  import mediumZoom from 'medium-zoom'
  class AstroZoomable extends HTMLElement {
    constructor() {
      super()
      const image = this.querySelectorAll('[data-zoomable]')

      const zoom = mediumZoom(image, {
        background: 'rgba(0, 0, 0, 0.9)',
      })

      zoom.on('open', () => {
        document.body.style.overflow = 'hidden'
      })

      zoom.on('closed', () => {
        document.body.style.overflow = 'auto'
      })

      this.addEventListener('click', () => {
        zoom.open()
      })
    }
  }

  customElements.define('astro-zoomable', AstroZoomable)
</script>
