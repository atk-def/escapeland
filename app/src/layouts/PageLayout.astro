---
import Navigation from '~/components/common/Navigation.astro'
import '@fontsource/dotgothic16'
import '~/styles/crt-effect.css'
import '~/styles/global.css'
import { ViewTransitions } from 'astro:transitions'
import '~/styles/mouse-follower.css'
import { SEO } from 'astro-seo'
import ColorSchemeToggle from '~/components/common/ColorSchemeToggle.astro'
import { Image } from 'astro:assets'
import Logo from '~/../public/favicon.svg'
import { runQuery } from '~/sanity/run-query'
import { profileQuery } from '~/sanity/schemas/profile'

interface Props {
  title?: string
  seo?: Partial<{
    image: string
    description: string
    article: Partial<{
      publishedTime: string
      tags: string[]
    }>
  }>
}
const { title, seo = {} } = Astro.props

const {
  image = '/favicon.svg',
  description = `Welcome to Escapeland, let's embark on an adventure now!`,
  article,
} = seo

const url = Astro.request.url

const profile = await runQuery(profileQuery)
const { name } = profile

const titleSuffix = `${name}'s Escapeland`
const fullTitle = title ? `${title} - ${titleSuffix}` : titleSuffix
---

<html lang="en" class="light">
  <head>
    <SEO
      charset="utf-8"
      title={fullTitle}
      description={description}
      twitter={{
        card: 'summary',
        image,
        creator: name,
        title: fullTitle,
        description,
        site: url,
      }}
      openGraph={{
        basic: {
          title: fullTitle,
          type: article ? 'article' : 'website',
          image,
          url,
        },
        optional: {
          siteName: titleSuffix,
          description,
        },
        article: { authors: [name], ...article },
      }}
      extend={{
        link: [{ rel: 'icon', href: '/favicon.svg' }],
        meta: [
          { name: 'viewport', content: 'width=device-width' },
          { name: 'generator', content: Astro.generator },
        ],
      }}
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <ViewTransitions />
  </head>
  <body
    class="flex sm:justify-end px-8 pt-16 pb-32 sm:pb-16 sm:pl-48 font-dotgothic16 min-h-screen"
  >
    <div class="app-window-layout">
      <section class="app-window-title-bar">
        <Image
          src={Logo}
          alt="Logo"
          width={20}
          class="mr-2 border border-on-background/10 rounded-md"
        />
        <span class="text-sm w-3/4 truncate">{fullTitle}</span>
        <ColorSchemeToggle class="ml-auto pointer-events-auto" />
      </section>
    </div>
    <Navigation />
    <main class="w-full">
      <slot />
    </main>
    <style>
      .app-window-layout {
        @apply fixed top-0 left-0 z-20;
        @apply w-full h-screen;
        @apply pointer-events-none;

        > .app-window-title-bar {
          @apply flex items-center justify-center;
          @apply w-full h-8 bg-primary px-1.5;
        }

        @media (pointer: fine) {
          @apply border-[0.375rem] border-t-0 border-primary;

          > .app-window-title-bar {
            @apply px-0;
          }
        }
      }
    </style>
    <script>
      import Lenis from '@studio-freight/lenis'

      document.addEventListener('astro:page-load', async () => {
        const lenis = new Lenis()

        const raf = (time: DOMHighResTimeStamp) => {
          lenis.raf(time)
          requestAnimationFrame(raf)
        }

        requestAnimationFrame(raf)

        if (window.matchMedia('(pointer: fine)').matches) {
          const { default: MouseFollower } = await import('mouse-follower')
          const { default: gsap } = await import('gsap')

          MouseFollower.registerGSAP(gsap)
          new MouseFollower()
        }
      })
    </script>
  </body>
</html>
